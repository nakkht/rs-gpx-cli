name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  LC_CTYPE: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    env: 
      TARGET=x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Install packages
        run: sudo apt install musl-tools
      - name: Build release
        run: |
          rustup target add $TARGET
          cargo build --release --target $TARGET --verbose
      - name: Tar zip
        run: |
          tar czvf rs-gpx.tar.gz target/$TARGET/release/rs-gpx
      - name: Upload binaries
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.UPLOAD_ARTIFACTS }}
          draft: true
          files: rs-gpx.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Build release
        run: |
          cargo build --release --verbose
      - name: Upload binaries
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.UPLOAD_ARTIFACTS }}
          draft: true
          files: target/release/rs-gpx.exe

  build-macos:
    runs-on: macos-latest
    env: 
      MACOSX_DEPLOYMENT_TARGET=10.7 
      TARGET=x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Build release
        run: |
          cargo build --release --target $TARGET --verbose
      - name: Upload binaries
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.UPLOAD_ARTIFACTS }}
          draft: true
          files: target/x86_64-apple-darwin/release/rs-gpx
