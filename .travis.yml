language: rust
os:
  # - linux
  # - osx
  - windows
dist: xenial

rust:
  - stable
  # - beta
  # - nightly

# branches:
#   - develop
#   - master

cache: cargo

script:
  - cargo build --verbose
  - cargo test --verbose

jobs:
  include:
    - name: Windows binaries
      os: windows
      script:
        - cargo build --release --verbose
      deploy:
        provider: releases
        token: $GH_TOKEN
        skip_cleanup: true
        draft: true
        overwrite: true
        on:
          tags: false
          branch: windows-binaries
          condition: "$TRAVIS_RUST_VERSION = stable"
        file: target/release/rust-gpx-cli.exe

    - name: Linux binaries
      os: linux
      dist: xenial
      addons:
        apt:
          packages:
            - musl-tools
      env: TARGET=x86_64-unknown-linux-musl
      before_script: rustup target add $TARGET
      script:
        - cargo build --release --target $TARGET --verbose
      before_deploy:
        - tar czvf rust-gpx-cli.tar.gz target/$TARGET/release/rust-gpx-cli
      deploy:
        provider: releases
        token: $GH_TOKEN
        skip_cleanup: true
        draft: true
        overwrite: true
        on:
          tags: false
          branch: windows-binaries
          condition: "$TRAVIS_RUST_VERSION = stable"
        file: rust-gpx-cli.tar.gz

  allow_failures:
    - rust: nightly
  fast_finish: true