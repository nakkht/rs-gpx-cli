language: rust
os:
  - linux
  - osx
  - windows
dist: xenial

rust:
  - stable
  - beta
  - nightly

branches:
  - /^v\d+\.\d+\.\d+$/
  - develop
  - master

cache: cargo

script:
  - cargo build --verbose
  - cargo test --verbose

_deploy_definition: &deploy_definition
  provider: releases
  token: $GH_TOKEN
  skip_cleanup: true
  draft: true
  overwrite: true
  on:
    tags: true
    condition: "$TRAVIS_RUST_VERSION = stable"

jobs:
  include:
    - name: Windows binaries
      os: windows
      rust: stable
      script: cargo build --release --verbose
      deploy:
        <<: *deploy_definition
        file: target/release/rs-gpx.exe

    - name: Linux binaries
      os: linux
      rust: stable
      dist: xenial
      addons:
        apt:
          packages:
            - musl-tools
      env: TARGET=x86_64-unknown-linux-musl
      before_script: rustup target add $TARGET
      script: cargo build --release --target $TARGET --verbose
      before_deploy:
        - tar czvf rs-gpx.tar.gz target/$TARGET/release/rs-gpx
      deploy:
        <<: *deploy_definition
        file: rs-gpx.tar.gz

    - name: macOS binaries
      env: MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
      os: osx
      rust: stable
      script: cargo build --release --target $TARGET --verbose
      deploy:
        <<: *deploy_definition
        file: target/x86_64-apple-darwin/release/rs-gpx

  allow_failures:
    - rust: nightly
  fast_finish: true